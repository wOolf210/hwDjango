"""
Django settings for project project.

Generated by 'django-admin startproject' using Django 5.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

from django.conf.global_settings import LOGIN_URL, CACHE_MIDDLEWARE_ALIAS, SESSION_ENGINE, SESSION_CACHE_ALIAS, \
    EMAIL_USE_LOCALTIME

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-j=7oqal5x*#6(w9=nia=4h7)g6(7s2yeqnztdv)j(5m4ar!g-x'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app.apps.AppConfig',
    'films.apps.FilmsConfig',
    'core.apps.CoreConfig',
    'webcore.apps.WebcoreConfig',
    'precise_bbcode',
    'tailwind',
    'theme',
    'easy_thumbnails',
    'rest_framework',
    'corsheaders',
    # 'django_cleanup.apps.CleanupConfig'
]

JAZZMIN_SETTINGS = {
    "site_title": "MarketPlace Admin",
    "site_header": "Админка",
    "welcome_sign": "Добро пожаловать в админку",
    "site_brand":"Python44",
    "show_sidebar": True,
    "show_navigation": True,
    "navigation_expanded": True,
    "related_modal_active": True,
    "icons": {
        "webcore.Ad": "fas fa-bullhorn",
        "webcore.Rubric": "fas fa-folder-tree",
        "webcore.Comment": "fas fa-comment-dots",
        "auth.User": "fas fa-user",
        "auth.Group": "fas fa-users",
    },
}

THUMBNAIL_ALIASES = {
    '': {
        'card':   {'size': (300, 300), 'crop': 'smart'},
        'detail': {'size': (800, 0),   'crop': 'scale'},
    },
}
THUMBNAIL_DEFAULT_OPTIONS = {
    'quality': 85,
}
TAILWIND_APP_NAME="theme"
NPM_BIN_PATH=r"C:\Program Files\nodejs\npm.cmd"

MIDDLEWARE = [
    'django.middleware.http.ConditionalGetMiddleware',
    # 'django.middleware.cache.UpdateCacheMiddleware',
    # 'django.middleware.cache.FetchFromCacheMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'core.middleware.simple_middleware',
    'core.middleware.RequestIdMiddleware',
    'core.middleware.TimingMiddleware',
    'core.middleware.BlockIpMiddleware',
    'core.middleware.ExceptionMiddleware',
    'core.middleware.BlockForbiddenWordsMiddleware',

]
# CACHE_MIDDLEWARE_ALIAS='default'
# CACHE_MIDDLEWARE_SECONDS = 60*5
# CACHE_MIDDLEWARE_KEY_PREFIX=''

ROOT_URLCONF = 'project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'templates',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'core.context_processors.posts',
                'core.context_processors.site_info',

            ],
        },
    },
]

WSGI_APPLICATION = 'project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
        'ATOMIC_REQUESTS': False,
        'AUTOCOMMIT': True,
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Almaty'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

STATICFILES_DIRS = [
    BASE_DIR / 'static',
    BASE_DIR / 'theme'/'static',
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'



LOGIN_URL='login'
LOGIN_REDIRECT_URL = 'home'
LOGOUT_REDIRECT_URL = 'login'

EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "simple": {
            "format": "[{levelname}] {name}: {message}",
            "style": "{",
        },
    },
    "handlers": {
        "console": {
            "class": "logging.StreamHandler",
            "formatter": "simple",
            "level": "INFO",
        },
    },
    "loggers": {
        "app.signals": {
            "handlers": ["console"],
            "level": "INFO",
            "propagate": False,
        },
        "app": {
            "handlers": ["console"],
            "level": "INFO",
            "propagate": False,
        },
    },
}

# CACHES={
#     'default':{
#         'BACKEND':'django_redis.cache.RedisCache',
#         'LOCATION':'redis://localhost:6379/0',
#     }
# }
# SESSION_ENGINE="django.contrib.sessions.backends.cache"
# SESSION_CACHE_ALIAS="default"

CACHES={
    'default':{
        'BACKEND':'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION':'unique-snowflake',
        'TIMEOUT':300,
        'KEY_PREFIX':'',
        'VERSION':1,
        'OPTIONS':{
            'MAX_ENTRIES':1000,
            'CULL_FREQUENCY':3, #1/3
        }
    },
    'special': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'special',
        'TIMEOUT': 300,
    },
    'db':{
        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        'LOCATION': 'my_cache',
        'TIMEOUT': None,
    }
}


PRECISE_BBCODE={
    'BBCODE_NEWLINE':'<br>',
    'BBCODE_DISABLE_BUILTIN_TAGS':False,
    'BBCODE_ALLOW_CUSTOM_TAGS':True,
    'BBCODE_ALLOW_SMILIES':True,
    'SMILIES_UPLOAD_TO':'precise_bbcode/smilies',
}
MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"


SESSION_COOKIE_NAME = "sessionid"
SESSION_COOKIE_HTTPONLY = True
SESSION_COOKIE_SECURE = False

CSRF_COOKIE_HTTPONLY = False
CSRF_COOKIE_SECURE = False

SESSION_COOKIE_AGE = 60*60*24*7

MESSAGE_STORAGE = 'django.contrib.messages.storage.fallback.FallbackStorage'

from django.contrib.messages import constants as message_constants

MESSAGE_TAGS = {
    message_constants.DEBUG: 'debug',
    message_constants.INFO: 'info',
    message_constants.SUCCESS: 'success',
    message_constants.WARNING: 'warning',
    message_constants.ERROR: 'error',
    40: 'notice',
}




EMAIL_BACKEND="django.core.mail.backends.smtp.EmailBackend"
EMAIL_HOST="smtp.gmail.com"
EMAIL_HOST_USER="EMAIL"
EMAIL_HOST_PASSWORD="PASSWORD"
EMAIL_PORT=587
EMAIL_USE_TLS=True
EMAIL_USE_SSL=False
EMAIL_USE_LOCALTIME= True
EMAIL_TIMEOUT=30

DEFAULT_FROM_EMAIL = "EMAIL"
ADMINS=[("Admin","EMAIL"),]
MANAGERS=[("Manager","EMAIL"),]
EMAIL_SUBJECT_PREFIX = "[Django]"


REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [],
    "DEFAULT_RENDERER_CLASSES": ["rest_framework.renderers.JSONRenderer"],
    "DEFAULT_PERMISSION_CLASSES": ["rest_framework.permissions.AllowAny"],
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 5,
}

CORS_ALLOW_ALL_ORIGINS = True



